/* 
 * API for Pet Project
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace PetApiClient
{
    /// <summary>
    /// DetailAppointment
    /// </summary>
    [DataContract]
    public partial class DetailAppointment :  IEquatable<DetailAppointment>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DetailAppointment" /> class.
        /// </summary>
        /// <param name="IdDetail">IdDetail.</param>
        /// <param name="IdAppointment">IdAppointment.</param>
        /// <param name="IdClinic">IdClinic.</param>
        /// <param name="IdVet">IdVet.</param>
        /// <param name="Appointment">Appointment.</param>
        /// <param name="Clinic">Clinic.</param>
        /// <param name="Vet">Vet.</param>
        public DetailAppointment(int? IdDetail = default(int?), int? IdAppointment = default(int?), int? IdClinic = default(int?), int? IdVet = default(int?), Appointment Appointment = default(Appointment), Clinic Clinic = default(Clinic), Vet Vet = default(Vet))
        {
            this.IdDetail = IdDetail;
            this.IdAppointment = IdAppointment;
            this.IdClinic = IdClinic;
            this.IdVet = IdVet;
            this.Appointment = Appointment;
            this.Clinic = Clinic;
            this.Vet = Vet;
        }
        
        /// <summary>
        /// Gets or Sets IdDetail
        /// </summary>
        [DataMember(Name="idDetail", EmitDefaultValue=false)]
        public int? IdDetail { get; set; }
        /// <summary>
        /// Gets or Sets IdAppointment
        /// </summary>
        [DataMember(Name="idAppointment", EmitDefaultValue=false)]
        public int? IdAppointment { get; set; }
        /// <summary>
        /// Gets or Sets IdClinic
        /// </summary>
        [DataMember(Name="idClinic", EmitDefaultValue=false)]
        public int? IdClinic { get; set; }
        /// <summary>
        /// Gets or Sets IdVet
        /// </summary>
        [DataMember(Name="idVet", EmitDefaultValue=false)]
        public int? IdVet { get; set; }
        /// <summary>
        /// Gets or Sets Appointment
        /// </summary>
        [DataMember(Name="Appointment", EmitDefaultValue=false)]
        public Appointment Appointment { get; set; }
        /// <summary>
        /// Gets or Sets Clinic
        /// </summary>
        [DataMember(Name="Clinic", EmitDefaultValue=false)]
        public Clinic Clinic { get; set; }
        /// <summary>
        /// Gets or Sets Vet
        /// </summary>
        [DataMember(Name="Vet", EmitDefaultValue=false)]
        public Vet Vet { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class DetailAppointment {\n");
            sb.Append("  IdDetail: ").Append(IdDetail).Append("\n");
            sb.Append("  IdAppointment: ").Append(IdAppointment).Append("\n");
            sb.Append("  IdClinic: ").Append(IdClinic).Append("\n");
            sb.Append("  IdVet: ").Append(IdVet).Append("\n");
            sb.Append("  Appointment: ").Append(Appointment).Append("\n");
            sb.Append("  Clinic: ").Append(Clinic).Append("\n");
            sb.Append("  Vet: ").Append(Vet).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as DetailAppointment);
        }

        /// <summary>
        /// Returns true if DetailAppointment instances are equal
        /// </summary>
        /// <param name="other">Instance of DetailAppointment to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DetailAppointment other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.IdDetail == other.IdDetail ||
                    this.IdDetail != null &&
                    this.IdDetail.Equals(other.IdDetail)
                ) && 
                (
                    this.IdAppointment == other.IdAppointment ||
                    this.IdAppointment != null &&
                    this.IdAppointment.Equals(other.IdAppointment)
                ) && 
                (
                    this.IdClinic == other.IdClinic ||
                    this.IdClinic != null &&
                    this.IdClinic.Equals(other.IdClinic)
                ) && 
                (
                    this.IdVet == other.IdVet ||
                    this.IdVet != null &&
                    this.IdVet.Equals(other.IdVet)
                ) && 
                (
                    this.Appointment == other.Appointment ||
                    this.Appointment != null &&
                    this.Appointment.Equals(other.Appointment)
                ) && 
                (
                    this.Clinic == other.Clinic ||
                    this.Clinic != null &&
                    this.Clinic.Equals(other.Clinic)
                ) && 
                (
                    this.Vet == other.Vet ||
                    this.Vet != null &&
                    this.Vet.Equals(other.Vet)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.IdDetail != null)
                    hash = hash * 59 + this.IdDetail.GetHashCode();
                if (this.IdAppointment != null)
                    hash = hash * 59 + this.IdAppointment.GetHashCode();
                if (this.IdClinic != null)
                    hash = hash * 59 + this.IdClinic.GetHashCode();
                if (this.IdVet != null)
                    hash = hash * 59 + this.IdVet.GetHashCode();
                if (this.Appointment != null)
                    hash = hash * 59 + this.Appointment.GetHashCode();
                if (this.Clinic != null)
                    hash = hash * 59 + this.Clinic.GetHashCode();
                if (this.Vet != null)
                    hash = hash * 59 + this.Vet.GetHashCode();
                return hash;
            }
        }

    }

}
